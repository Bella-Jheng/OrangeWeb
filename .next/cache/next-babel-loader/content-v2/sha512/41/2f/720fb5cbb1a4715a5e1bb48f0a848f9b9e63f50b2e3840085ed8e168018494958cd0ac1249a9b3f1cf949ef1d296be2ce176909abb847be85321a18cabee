{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zhengyiting/ReactProjects/orange-web/store/AuthProvider.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nimport AuthContext from './auth-context';\nvar loginTimer;\n\nvar cauculateRemainTime = function cauculateRemainTime(expiration) {\n  var currentTime = new Date().getTime();\n  var expirationTime = new Date(expiration).getTime();\n  var remainingTime = expirationTime - currentTime;\n  return remainingTime;\n};\n\nvar storeToken = function storeToken() {\n  var token = localStorage.getItem('token');\n  var expirationTime = localStorage.getItem('expirationTime');\n  var remainingTime = cauculateRemainTime(expirationTime); //登入時間超過1小時，登出\n\n  if (remainingTime <= 600000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: token,\n    remainingTime: remainingTime\n  };\n};\n\nvar AuthContextProvider = function AuthContextProvider() {\n  _s();\n\n  //每render一次，重新計算過期時間\n  //回傳token,remainingTime\n  var tokenData = storeToken();\n  var initialToken;\n\n  if (tokenData) {\n    initialToken = localStorage.getItem('token');\n  }\n\n  var _useState = useState(initialToken),\n      token = _useState[0],\n      setToken = _useState[1];\n\n  var isLogin = !!token; //isString && empty    -> false\n  //isString && notEmpty -> true\n\n  var logout = useCallback(function () {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (loginTimer) {\n      clearTimeout(loginTimer);\n    }\n  }, []);\n\n  var login = function login(token, expirationTime) {\n    //expirationTime 過期時間 = firebase 過期時間\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime); //倒數計時，時間到執行登出\n\n    loginTimer = setTimeout(logout, cauculateRemainTime(expirationTime));\n  }; //重新render時重刷剩餘時間\n\n\n  useEffect(function () {\n    if (tokenData) {\n      loginTimer = setTimeout(logout, tokenData.remainingTime);\n    }\n  }, [tokenData, logout]);\n  var authContext = {\n    token: token,\n    isLogin: isLogin,\n    login: login,\n    logout: logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AuthContextProvider, \"1I3rmYthdsQUIXYSebVqiWIDQtA=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/zhengyiting/ReactProjects/orange-web/store/AuthProvider.js"],"names":["useState","useCallback","useEffect","AuthContext","loginTimer","cauculateRemainTime","expiration","currentTime","Date","getTime","expirationTime","remainingTime","storeToken","token","localStorage","getItem","removeItem","AuthContextProvider","tokenData","initialToken","setToken","isLogin","logout","clearTimeout","login","setItem","setTimeout","authContext","props","children"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,IAAIC,UAAJ;;AACA,IAAMC,mBAAmB,GAAE,SAArBA,mBAAqB,CAACC,UAAD,EAAgB;AACvC,MAAMC,WAAW,GAAE,IAAIC,IAAJ,GAAWC,OAAX,EAAnB;AACA,MAAMC,cAAc,GAAE,IAAIF,IAAJ,CAASF,UAAT,EAAqBG,OAArB,EAAtB;AACA,MAAME,aAAa,GAAGD,cAAc,GAAGH,WAAvC;AAEA,SAAOI,aAAP;AACH,CAND;;AAQA,IAAMC,UAAU,GAAE,SAAZA,UAAY,GAAI;AAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAML,cAAc,GAAGI,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAvB;AAEA,MAAIJ,aAAa,GAAGN,mBAAmB,CAACK,cAAD,CAAvC,CAJkB,CAMlB;;AACA,MAAGC,aAAa,IAAI,MAApB,EAA2B;AACvBG,IAAAA,YAAY,CAACE,UAAb,CAAwB,OAAxB;AACAF,IAAAA,YAAY,CAACE,UAAb,CAAwB,gBAAxB;AACA,WAAO,IAAP;AACH;;AAED,SAAM;AACFH,IAAAA,KAAK,EAALA,KADE;AAEFF,IAAAA,aAAa,EAAbA;AAFE,GAAN;AAIH,CAjBD;;AAmBA,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAAA;;AAC9B;AACA;AACA,MAAMC,SAAS,GAAGN,UAAU,EAA5B;AACA,MAAIO,YAAJ;;AAEA,MAAGD,SAAH,EAAa;AACTC,IAAAA,YAAY,GAAGL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf;AACH;;AAR6B,kBAULf,QAAQ,CAACmB,YAAD,CAVH;AAAA,MAUvBN,KAVuB;AAAA,MAUjBO,QAViB;;AAW9B,MAAMC,OAAO,GAAG,CAAC,CAACR,KAAlB,CAX8B,CAY9B;AACA;;AAEA,MAAMS,MAAM,GAAErB,WAAW,CAAC,YAAM;AAC5BmB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAN,IAAAA,YAAY,CAACE,UAAb,CAAwB,OAAxB;AACAF,IAAAA,YAAY,CAACE,UAAb,CAAwB,gBAAxB;;AAEA,QAAGZ,UAAH,EAAc;AACVmB,MAAAA,YAAY,CAACnB,UAAD,CAAZ;AACH;AACJ,GARwB,EAQvB,EARuB,CAAzB;;AAUA,MAAMoB,KAAK,GAAE,SAAPA,KAAO,CAACX,KAAD,EAAOH,cAAP,EAA0B;AACnC;AACAU,IAAAA,QAAQ,CAACP,KAAD,CAAR;AACAC,IAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA6BZ,KAA7B;AACAC,IAAAA,YAAY,CAACW,OAAb,CAAqB,gBAArB,EAAsCf,cAAtC,EAJmC,CAMnC;;AACAN,IAAAA,UAAU,GAACsB,UAAU,CAACJ,MAAD,EAAQjB,mBAAmB,CAACK,cAAD,CAA3B,CAArB;AACH,GARD,CAzB8B,CAmC9B;;;AACAR,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGgB,SAAH,EAAa;AACTd,MAAAA,UAAU,GAAGsB,UAAU,CAACJ,MAAD,EAAQJ,SAAS,CAACP,aAAlB,CAAvB;AACH;AACJ,GAJQ,EAIP,CAACO,SAAD,EAAWI,MAAX,CAJO,CAAT;AAMA,MAAMK,WAAW,GAAE;AACfd,IAAAA,KAAK,EAALA,KADe;AAEfQ,IAAAA,OAAO,EAAPA,OAFe;AAGfG,IAAAA,KAAK,EAALA,KAHe;AAIfF,IAAAA,MAAM,EAANA;AAJe,GAAnB;AAOF,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,WAA7B;AAAA,cACGC,KAAK,CAACC;AADT;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAtDD;;GAAMZ,mB;;KAAAA,mB;AAwDN,eAAeA,mBAAf","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport AuthContext from './auth-context';\n\nlet loginTimer;\nconst cauculateRemainTime =(expiration) => {\n    const currentTime =new Date().getTime();\n    const expirationTime =new Date(expiration).getTime();\n    const remainingTime = expirationTime - currentTime;\n\n    return remainingTime;\n}\n\nconst storeToken =()=>{\n    const token = localStorage.getItem('token');\n    const expirationTime = localStorage.getItem('expirationTime');\n\n    let remainingTime = cauculateRemainTime(expirationTime);\n\n    //登入時間超過1小時，登出\n    if(remainingTime <= 600000){\n        localStorage.removeItem('token');\n        localStorage.removeItem('expirationTime');\n        return null\n    }\n\n    return{\n        token,\n        remainingTime\n    }\n}\n\nconst AuthContextProvider = () => {\n    //每render一次，重新計算過期時間\n    //回傳token,remainingTime\n    const tokenData = storeToken();\n    let initialToken;\n\n    if(tokenData){\n        initialToken = localStorage.getItem('token');\n    }\n\n    const [token,setToken] = useState(initialToken);\n    const isLogin = !!token;\n    //isString && empty    -> false\n    //isString && notEmpty -> true\n\n    const logout =useCallback(() => {\n        setToken(null);\n        localStorage.removeItem('token');\n        localStorage.removeItem('expirationTime')\n\n        if(loginTimer){\n            clearTimeout(loginTimer)\n        }\n    },[])\n\n    const login =(token,expirationTime) => {\n        //expirationTime 過期時間 = firebase 過期時間\n        setToken(token);\n        localStorage.setItem('token',token);\n        localStorage.setItem('expirationTime',expirationTime);\n\n        //倒數計時，時間到執行登出\n        loginTimer=setTimeout(logout,cauculateRemainTime(expirationTime))\n    }\n\n    //重新render時重刷剩餘時間\n    useEffect(()=>{\n        if(tokenData){\n            loginTimer = setTimeout(logout,tokenData.remainingTime)\n        }\n    },[tokenData,logout])\n\n    const authContext ={\n        token,\n        isLogin,\n        login,\n        logout\n    }\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}