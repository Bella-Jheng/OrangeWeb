{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport classes from \"./index.module.css\";\nimport Banner from \"../../components/layout/Banner\";\nimport Button, { GreenButton } from \"../../components/UI/Button\";\nimport Login from \"../../components/login/Login\";\nimport Register from \"../../components/login/Register\";\nimport useInput from \"../../hooks/use-input\";\nimport useHttp from \"../../hooks/use-http\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst index = () => {\n  const {\n    0: isLoginForm,\n    1: setLoginForm\n  } = useState(true);\n  const authCtx = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest: sendRequest\n  } = useHttp();\n  const router = useRouter();\n\n  const switchForm = () => {\n    setLoginForm(prevState => !prevState);\n  };\n\n  const {\n    enterValue: name,\n    hasError: nameHasError,\n    onEnterValueChangeHandler: nameChangeHandler,\n    onInputIsTouchedHandler: nameBlurHandler,\n    reset: resetName\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    enterValue: email,\n    hasError: emailHasError,\n    onEnterValueChangeHandler: emailChangeHandler,\n    onInputIsTouchedHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(value => {\n    const express = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return express.test(String(value).toLowerCase());\n  });\n  const {\n    enterValue: password,\n    hasError: passwordHasError,\n    onEnterValueChangeHandler: passwordChangeHandler,\n    onInputIsTouchedHandler: passwordBlurHandler,\n    reset: resetPassword\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    enterValue: phone,\n    hasError: phoneHasError,\n    onEnterValueChangeHandler: phoneChangeHandler,\n    onInputIsTouchedHandler: phoneBlurHandler,\n    reset: resetPhone\n  } = useInput(value => value.trim() !== \"\");\n\n  const applyData = responseData => {\n    const expirationTime = new Date(new Date().getTime() + responseData.expiresIn * 1000);\n    authCtx.login(responseData.idToken, expirationTime);\n  };\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    let requestData = {};\n\n    if (isLoginForm) {\n      if (emailHasError || passwordHasError) {\n        return;\n      }\n\n      requestData = {\n        url: \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAxz4_e9HdJ-sMLmffL-J1SneHjRr3NlDE\",\n        method: \"POST\",\n        body: {\n          email,\n          password,\n          returnSecureToken: true\n        }\n      };\n    } else {\n      if (emailHasError || passwordHasError || nameHasError || phoneHasError) {\n        return;\n      }\n\n      requestData = {\n        url: \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAxz4_e9HdJ-sMLmffL-J1SneHjRr3NlDE\",\n        method: \"POST\",\n        body: {\n          email,\n          password,\n          displayName: name,\n          phone,\n          returnSecureToken: true\n        }\n      };\n    }\n\n    sendRequest(requestData, applyData);\n    resetEmail();\n    resetPassword();\n    resetName();\n    resetPhone();\n    router.push(\"/\");\n  };\n\n  const LoginPart = /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Login, {\n      enterEmail: email,\n      enterEmailIsInvalid: emailHasError,\n      emailChangeHandler: emailChangeHandler,\n      emailBlurHandler: emailBlurHandler,\n      enterPassword: password,\n      enterPasswordIsInvalid: passwordHasError,\n      passwordChangeHandler: passwordChangeHandler,\n      passwordBlurHandler: passwordBlurHandler\n    }), /*#__PURE__*/_jsx(Button, {\n      title: \"\\u767B\\u5165\"\n    })]\n  });\n\n  const RegisterPart = /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Register, {\n      enterEmail: email,\n      enterEmailIsInvalid: emailHasError,\n      emailChangeHandler: emailChangeHandler,\n      emailBlurHandler: emailBlurHandler,\n      enterPassword: password,\n      enterPasswordIsInvalid: passwordHasError,\n      passwordChangeHandler: passwordChangeHandler,\n      passwordBlurHandler: passwordBlurHandler,\n      enterName: name,\n      enterNameIsInvalid: nameHasError,\n      nameChangeHandler: nameChangeHandler,\n      nameBlurHandler: nameBlurHandler,\n      enterPhone: phone,\n      enterPhoneIsInvalid: phoneHasError,\n      phoneChangeHandler: phoneChangeHandler,\n      phoneBlurHandler: phoneBlurHandler\n    }), /*#__PURE__*/_jsx(GreenButton, {\n      title: \"\\u8A3B\\u518A\"\n    })]\n  });\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsx(Banner, {\n      title: \"\\u767B\\u5165\\u53CA\\u8A3B\\u518A\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.wrapper,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.loginContainer,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: classes.header,\n          children: [/*#__PURE__*/_jsx(\"a\", {\n            className: `${classes.link}` + \" \" + `${isLoginForm && classes.visited}`,\n            onClick: switchForm,\n            children: \"\\u767B\\u5165\"\n          }), /*#__PURE__*/_jsx(\"span\", {\n            children: \"|\"\n          }), /*#__PURE__*/_jsx(\"a\", {\n            className: `${classes.link}` + \" \" + `${!isLoginForm && classes.visited}`,\n            onClick: switchForm,\n            children: \"\\u8A3B\\u518A\"\n          })]\n        }), /*#__PURE__*/_jsx(\"form\", {\n          className: classes.form,\n          onSubmit: onSubmitHandler,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: classes.inputContainer,\n            children: isLoginForm ? LoginPart : RegisterPart\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.buttonContainer,\n          children: [/*#__PURE__*/_jsx(\"a\", {\n            className: classes.forgetPassword,\n            children: \"\\u5FD8\\u8A18\\u5BC6\\u78BC\\uFF1F\"\n          }), /*#__PURE__*/_jsx(\"h6\", {\n            className: classes.loginHorizontal,\n            children: /*#__PURE__*/_jsx(\"span\", {\n              children: \"\\u6216\\u8005\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: classes.googleLogin,\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              src: \"https://img.icons8.com/fluency/15/000000/google-logo.png\"\n            }), /*#__PURE__*/_jsx(\"span\", {\n              children: \"google \\u5E33\\u865F\\u767B\\u5165\"\n            })]\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nexport default index;","map":null,"metadata":{},"sourceType":"module"}