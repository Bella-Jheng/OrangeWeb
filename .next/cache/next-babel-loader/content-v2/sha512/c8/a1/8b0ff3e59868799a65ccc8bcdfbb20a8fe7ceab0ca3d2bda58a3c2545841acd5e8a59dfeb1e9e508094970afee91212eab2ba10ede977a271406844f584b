{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport useHttp from \"../hooks/use-http\";\nconst url = \"https://react-http-3d73c-default-rtdb.firebaseio.com/orangecart.json\"; //read\n\nexport const fetchingCartData = () => {\n  //會自動 export action({type:'addToCart',ammount:1}) 也可以直接export方法出去\n  // const { isLoading, error, sendRequest } = useHttp();\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(\"Fetching data failed!\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const fetchingData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: data.items || [],\n        totalQuantity: data.totalQuantity,\n        totalPrice: data.totalPrice\n      })); //當物件全刪，firebase totalQuantity=0 items 會消失，重刷執行replaceCart會map不到items，因此給預設值空[]\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}; //update\n\nexport const sendingCartData = cartData => {\n  // const { isLoading, error, sendRequest } = useHttp();\n  return async dispatch => {\n    const sendingCart = async () => {\n      const response = await fetch(url, {\n        method: \"PUT\",\n        //put=override, post=add\n        body: JSON.stringify({\n          items: cartData.items,\n          totalQuantity: cartData.totalQuantity,\n          totalPrice: cartData.totalPrice\n        }) //avoid the property 'isChanged'\n\n      });\n\n      if (!response.ok) {\n        console.log(\"Request failed\");\n      }\n    };\n\n    try {\n      await sendingCart();\n    } catch (error) {\n      console.log(\"Request failed\");\n    }\n  };\n};","map":{"version":3,"sources":["/Users/zhengyiting/ReactProjects/orange-web/store/cart-action.js"],"names":["cartActions","useHttp","url","fetchingCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","fetchingData","replaceCart","items","totalQuantity","totalPrice","error","console","log","message","sendingCartData","cartData","sendingCart","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,WAAT,QAA4B,cAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,MAAMC,GAAG,GACP,sEADF,C,CAGA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC;AACA;AAEA,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;;AACA,UAAI,CAACI,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,aAAOD,IAAP;AACD,KAPD;;AASA,QAAI;AACF,YAAME,YAAY,GAAG,MAAMP,SAAS,EAApC;AACAD,MAAAA,QAAQ,CACNJ,WAAW,CAACa,WAAZ,CAAwB;AACtBC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAL,IAAc,EADC;AAEtBC,QAAAA,aAAa,EAAEL,IAAI,CAACK,aAFE;AAGtBC,QAAAA,UAAU,EAAEN,IAAI,CAACM;AAHK,OAAxB,CADM,CAAR,CAFE,CASF;AACD,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,GAvBD;AAwBD,CA5BM,C,CA8BP;;AACA,OAAO,MAAMC,eAAe,GAAIC,QAAD,IAAc;AAC3C;AACA,SAAO,MAAOlB,QAAP,IAAoB;AACzB,UAAMmB,WAAW,GAAG,YAAY;AAC9B,YAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAChCsB,QAAAA,MAAM,EAAE,KADwB;AAEhC;AACAC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBb,UAAAA,KAAK,EAAEQ,QAAQ,CAACR,KADG;AAEnBC,UAAAA,aAAa,EAAEO,QAAQ,CAACP,aAFL;AAGnBC,UAAAA,UAAU,EAAEM,QAAQ,CAACN;AAHF,SAAf,CAH0B,CAQhC;;AARgC,OAAN,CAA5B;;AAUA,UAAI,CAACV,QAAQ,CAACE,EAAd,EAAkB;AAChBU,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,KAdD;;AAeA,QAAI;AACF,YAAMI,WAAW,EAAjB;AACD,KAFD,CAEE,OAAON,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,GArBD;AAsBD,CAxBM","sourcesContent":["import { cartActions } from \"./cart-slice\";\nimport useHttp from \"../hooks/use-http\";\n\nconst url =\n  \"https://react-http-3d73c-default-rtdb.firebaseio.com/orangecart.json\";\n\n//read\nexport const fetchingCartData = () => {\n  //會自動 export action({type:'addToCart',ammount:1}) 也可以直接export方法出去\n  // const { isLoading, error, sendRequest } = useHttp();\n\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Fetching data failed!\");\n      }\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const fetchingData = await fetchData();\n      dispatch(\n        cartActions.replaceCart({\n          items: data.items || [],\n          totalQuantity: data.totalQuantity,\n          totalPrice: data.totalPrice,\n        })\n      );\n      //當物件全刪，firebase totalQuantity=0 items 會消失，重刷執行replaceCart會map不到items，因此給預設值空[]\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n//update\nexport const sendingCartData = (cartData) => {\n  // const { isLoading, error, sendRequest } = useHttp();\n  return async (dispatch) => {\n    const sendingCart = async () => {\n      const response = await fetch(url, {\n        method: \"PUT\",\n        //put=override, post=add\n        body: JSON.stringify({\n          items: cartData.items,\n          totalQuantity: cartData.totalQuantity,\n          totalPrice: cartData.totalPrice,\n        }),\n        //avoid the property 'isChanged'\n      });\n      if (!response.ok) {\n        console.log(\"Request failed\");\n      }\n    };\n    try {\n      await sendingCart();\n    } catch (error) {\n      console.log(\"Request failed\");\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}