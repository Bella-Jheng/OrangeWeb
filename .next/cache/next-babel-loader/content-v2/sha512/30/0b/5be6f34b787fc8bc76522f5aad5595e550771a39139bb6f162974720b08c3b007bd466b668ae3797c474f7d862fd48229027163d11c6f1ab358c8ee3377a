{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    isChange: false\n  },\n  reducers: {\n    //read\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    //edit+add\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id == newItem.id);\n      state.isChange = true;\n      state.totalQuantity = state.totalQuantity + newItem.quantity;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          img: newItem.img,\n          price: newItem.price,\n          size: newItem.size,\n          quantity: newItem.quantity,\n          totalPrice: newItem.price * newItem.quality\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + newItem.quantity;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price * newItem.quantity;\n      }\n    },\n\n    //delete\n    removeFromCart(state, action) {\n      const newItemId = action.payload;\n      state.isChange = true;\n      const existingItem = state.items.find(item => item.id === newItemId);\n\n      if (existingItem) {\n        state.items = state.items.filter(item => item.id !== newItemId);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      } else {\n        state.items = [];\n        state.totalQuantity = 0;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/zhengyiting/ReactProjects/orange-web/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","isChange","reducers","replaceCart","state","action","payload","addToCart","newItem","existingItem","find","item","id","quantity","push","img","price","size","totalPrice","quality","removeFromCart","newItemId","filter","cartActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,aAAa,EAAE,CAA5B;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAFc;AAG5BC,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACJ,aAAN,GAAsBK,MAAM,CAACC,OAAP,CAAeN,aAArC;AACAI,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B;AACD,KALO;;AAMR;AACAQ,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,IAAWJ,OAAO,CAACI,EAA9C,CAArB;AACAR,MAAAA,KAAK,CAACH,QAAN,GAAiB,IAAjB;AACAG,MAAAA,KAAK,CAACJ,aAAN,GAAsBI,KAAK,CAACJ,aAAN,GAAsBQ,OAAO,CAACK,QAApD;;AAEA,UAAI,CAACJ,YAAL,EAAmB;AACjBL,QAAAA,KAAK,CAACL,KAAN,CAAYe,IAAZ,CAAiB;AACfF,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EADG;AAEff,UAAAA,IAAI,EAAEW,OAAO,CAACX,IAFC;AAGfkB,UAAAA,GAAG,EAAEP,OAAO,CAACO,GAHE;AAIfC,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAJA;AAKfC,UAAAA,IAAI,EAAET,OAAO,CAACS,IALC;AAMfJ,UAAAA,QAAQ,EAAEL,OAAO,CAACK,QANH;AAOfK,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAAR,GAAgBR,OAAO,CAACW;AAPrB,SAAjB;AASD,OAVD,MAUO;AACLV,QAAAA,YAAY,CAACI,QAAb,GAAwBJ,YAAY,CAACI,QAAb,GAAwBL,OAAO,CAACK,QAAxD;AACAJ,QAAAA,YAAY,CAACS,UAAb,GACET,YAAY,CAACS,UAAb,GAA0BV,OAAO,CAACQ,KAAR,GAAgBR,OAAO,CAACK,QADpD;AAEC;AACJ,KA5BO;;AA8BR;AACAO,IAAAA,cAAc,CAAChB,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMgB,SAAS,GAAGhB,MAAM,CAACC,OAAzB;AACAF,MAAAA,KAAK,CAACH,QAAN,GAAiB,IAAjB;AACA,YAAMQ,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYS,SAAvC,CAArB;;AACA,UAAIZ,YAAJ,EAAkB;AAChBL,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYuB,MAAZ,CAAoBX,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYS,SAAzC,CAAd;AACAjB,QAAAA,KAAK,CAACJ,aAAN,GAAsBI,KAAK,CAACJ,aAAN,GAAsBS,YAAY,CAACI,QAAzD;AACD,OAHD,MAGO;AACLT,QAAAA,KAAK,CAACL,KAAN,GAAc,EAAd;AACAK,QAAAA,KAAK,CAACJ,aAAN,GAAsB,CAAtB;AACD;AACF;;AA1CO;AAHkB,CAAD,CAA7B;AAiDA,OAAO,MAAMuB,WAAW,GAAG3B,SAAS,CAAC4B,OAA9B;AACP,eAAe5B,SAAS,CAAC6B,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], totalQuantity: 0, isChange: false },\n  reducers: {\n    //read\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    //edit+add\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id == newItem.id);\n      state.isChange = true;\n      state.totalQuantity = state.totalQuantity + newItem.quantity;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          img: newItem.img,\n          price: newItem.price,\n          size: newItem.size,\n          quantity: newItem.quantity,\n          totalPrice: newItem.price * newItem.quality,\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + newItem.quantity;\n        existingItem.totalPrice =\n          existingItem.totalPrice + newItem.price * newItem.quantity;\n        }\n    },\n\n    //delete\n    removeFromCart(state, action) {\n      const newItemId = action.payload;\n      state.isChange = true;\n      const existingItem = state.items.find((item) => item.id === newItemId);\n      if (existingItem) {\n        state.items = state.items.filter((item) => item.id !== newItemId);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      } else {\n        state.items = [];\n        state.totalQuantity = 0\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}