{"ast":null,"code":"import { useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const sendRequest = useCallback(async requestData => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = fetch(requestData.url, {\n        method: requestConfig.method ? \"POST\" : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: JSON.stringify(requestConfig.body) ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      setError(error.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/zhengyiting/ReactProjects/orange-web/hooks/use-http.js"],"names":["useCallback","useState","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestData","response","fetch","url","method","requestConfig","headers","body","JSON","stringify","ok","Error","data","json","message"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMM,WAAW,GAAGP,WAAW,CAAC,MAAOQ,WAAP,IAAuB;AACrDJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AACF,YAAMG,QAAQ,GAAGC,KAAK,CAACF,WAAW,CAACG,GAAb,EAAkB;AACtCC,QAAAA,MAAM,EAAEC,aAAa,CAACD,MAAd,GAAuB,MAAvB,GAAgC,KADF;AAEtCE,QAAAA,OAAO,EAAED,aAAa,CAACC,OAAd,GAAwBD,aAAa,CAACC,OAAtC,GAAgD,EAFnB;AAGtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,aAAa,CAACE,IAA7B,IACFC,IAAI,CAACC,SAAL,CAAeJ,aAAa,CAACE,IAA7B,CADE,GAEF;AALkC,OAAlB,CAAtB;;AAQA,UAAI,CAACN,QAAQ,CAACS,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAnB;AAEA,aAAOD,IAAP;AAED,KAhBD,CAgBE,OAAOf,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACiB,OAAN,IAAiB,uBAAlB,CAAR;AACD;;AACDlB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAxB8B,EAwB5B,EAxB4B,CAA/B;AA0BA,SAAM;AACFD,IAAAA,SADE;AAEFE,IAAAA,KAFE;AAGFE,IAAAA;AAHE,GAAN;AAKD,CAnCD;;AAqCA,eAAeL,OAAf","sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (requestData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = fetch(requestData.url, {\n        method: requestConfig.method ? \"POST\" : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: JSON.stringify(requestConfig.body)\n          ? JSON.stringify(requestConfig.body)\n          : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      \n      return data\n\n    } catch (error) {\n      setError(error.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n\n  return{\n      isLoading,\n      error,\n      sendRequest\n  }\n};\n\nexport default useHttp;\n"]},"metadata":{},"sourceType":"module"}