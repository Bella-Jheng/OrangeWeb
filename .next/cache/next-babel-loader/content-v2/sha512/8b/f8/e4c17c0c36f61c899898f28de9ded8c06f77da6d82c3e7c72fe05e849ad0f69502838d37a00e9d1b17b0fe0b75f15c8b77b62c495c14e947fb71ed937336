{"ast":null,"code":"import { useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const sendRequest = useCallback(async (requestData, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestData.url, {\n        method: requestData.method ? requestData.method : \"POST\",\n        headers: requestData.headers ? requestData.headers : {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData.body) ? JSON.stringify(requestData.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (error) {\n      setError(error.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\nexport default useHttp;","map":null,"metadata":{},"sourceType":"module"}