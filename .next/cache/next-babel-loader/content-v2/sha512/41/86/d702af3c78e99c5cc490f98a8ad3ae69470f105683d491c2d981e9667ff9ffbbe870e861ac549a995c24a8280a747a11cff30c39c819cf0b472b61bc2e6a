{"ast":null,"code":"import { useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const sendRequest = useCallback(async (requestData, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestData.url, {\n        method: requestData.method ? requestData.method : \"POST\",\n        headers: requestData.headers ? requestData.headers : {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData.body) ? JSON.stringify(requestData.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (error) {\n      setError(error.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/zhengyiting/ReactProjects/orange-web/hooks/use-http.js"],"names":["useCallback","useState","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestData","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","message"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMM,WAAW,GAAGP,WAAW,CAAC,OAAOQ,WAAP,EAAmBC,SAAnB,KAAiC;AAC/DL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,WAAW,CAACI,GAAb,EAAkB;AAC5CC,QAAAA,MAAM,EAAEL,WAAW,CAACK,MAAZ,GAAqBL,WAAW,CAACK,MAAjC,GAA0C,MADN;AAE5CC,QAAAA,OAAO,EAAEN,WAAW,CAACM,OAAZ,GAAsBN,WAAW,CAACM,OAAlC,GAA4C;AACnD,0BAAgB;AADmC,SAFT;AAK5CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,WAAW,CAACO,IAA3B,IACFC,IAAI,CAACC,SAAL,CAAeT,WAAW,CAACO,IAA3B,CADE,GAEF;AAPwC,OAAlB,CAA5B;;AAUA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAZ,MAAAA,SAAS,CAACW,IAAD,CAAT;AAED,KAjBD,CAiBE,OAAOf,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACiB,OAAN,IAAiB,uBAAlB,CAAR;AACD;;AAEDlB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAED,GA3B8B,EA2B5B,EA3B4B,CAA/B;AA6BA,SAAM;AACFD,IAAAA,SADE;AAEFE,IAAAA,KAFE;AAGFE,IAAAA;AAHE,GAAN;AAKD,CAtCD;;AAwCA,eAAeL,OAAf","sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (requestData,applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestData.url, {\n        method: requestData.method ? requestData.method : \"POST\",\n        headers: requestData.headers ? requestData.headers : {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData.body)\n          ? JSON.stringify(requestData.body)\n          : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data)\n\n    } catch (error) {\n      setError(error.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n\n  }, []);\n\n  return{\n      isLoading,\n      error,\n      sendRequest\n  }\n};\n\nexport default useHttp;\n"]},"metadata":{},"sourceType":"module"}