{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zhengyiting/ReactProjects/orange-web/store/AuthProvider.js\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport AuthContext from \"./auth-context\";\nlet loginTimer;\n\nconst cauculateRemainTime = expiration => {\n  const currentTime = new Date().getTime();\n  const expirationTime = new Date(expiration).getTime();\n  const remainingTime = expirationTime - currentTime;\n  return remainingTime;\n};\n\nconst storeToken = () => {\n  const token = localStorage.getItem(\"token\");\n  const expirationTime = localStorage.getItem(\"expirationTime\");\n  let remainingTime = cauculateRemainTime(expirationTime); //登入時間超過1小時，登出\n\n  if (remainingTime <= 600000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token,\n    remainingTime\n  };\n};\n\nconst AuthContextProvider = () => {\n  //每render一次，重新計算過期時間\n  //回傳token,remainingTime\n  if (false) {\n    const tokenData = storeToken();\n    let initialToken;\n\n    if (tokenData) {\n      initialToken = localStorage.getItem(\"token\");\n    }\n\n    const {\n      0: token,\n      1: setToken\n    } = useState(initialToken);\n    const isLogin = !!token; //isString && empty    -> false\n    //isString && notEmpty -> true\n\n    const logout = useCallback(() => {\n      setToken(null);\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"expirationTime\");\n\n      if (loginTimer) {\n        clearTimeout(loginTimer);\n      }\n    }, []);\n\n    const login = (token, expirationTime) => {\n      //expirationTime 過期時間 = firebase 過期時間\n      setToken(token);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationTime\", expirationTime); //倒數計時，時間到執行登出\n\n      loginTimer = setTimeout(logout, cauculateRemainTime(expirationTime));\n    }; //重新render時重刷剩餘時間\n\n\n    useEffect(() => {\n      if (tokenData) {\n        loginTimer = setTimeout(logout, tokenData.remainingTime);\n      }\n    }, [tokenData, logout]);\n    const authContext = {\n      token,\n      isLogin,\n      login,\n      logout\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["/Users/zhengyiting/ReactProjects/orange-web/store/AuthProvider.js"],"names":["useState","useCallback","useEffect","AuthContext","loginTimer","cauculateRemainTime","expiration","currentTime","Date","getTime","expirationTime","remainingTime","storeToken","token","localStorage","getItem","removeItem","AuthContextProvider","tokenData","initialToken","setToken","isLogin","logout","clearTimeout","login","setItem","setTimeout","authContext","props","children"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport AuthContext from \"./auth-context\";\n\nlet loginTimer;\nconst cauculateRemainTime = (expiration) => {\n  const currentTime = new Date().getTime();\n  const expirationTime = new Date(expiration).getTime();\n  const remainingTime = expirationTime - currentTime;\n\n  return remainingTime;\n};\n\nconst storeToken = () => {\n  const token = localStorage.getItem(\"token\");\n  const expirationTime = localStorage.getItem(\"expirationTime\");\n\n  let remainingTime = cauculateRemainTime(expirationTime);\n\n  //登入時間超過1小時，登出\n  if (remainingTime <= 600000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token,\n    remainingTime,\n  };\n};\n\nconst AuthContextProvider = () => {\n  //每render一次，重新計算過期時間\n  //回傳token,remainingTime\n  if (typeof window !== \"undefined\") {\n    const tokenData = storeToken();\n\n    let initialToken;\n\n    if (tokenData) {\n      initialToken = localStorage.getItem(\"token\");\n    }\n\n    const [token, setToken] = useState(initialToken);\n    const isLogin = !!token;\n    //isString && empty    -> false\n    //isString && notEmpty -> true\n\n    const logout = useCallback(() => {\n      setToken(null);\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"expirationTime\");\n\n      if (loginTimer) {\n        clearTimeout(loginTimer);\n      }\n    }, []);\n\n    const login = (token, expirationTime) => {\n      //expirationTime 過期時間 = firebase 過期時間\n      setToken(token);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationTime\", expirationTime);\n\n      //倒數計時，時間到執行登出\n      loginTimer = setTimeout(logout, cauculateRemainTime(expirationTime));\n    };\n\n    //重新render時重刷剩餘時間\n    useEffect(() => {\n      if (tokenData) {\n        loginTimer = setTimeout(logout, tokenData.remainingTime);\n      }\n    }, [tokenData, logout]);\n\n    const authContext = {\n      token,\n      isLogin,\n      login,\n      logout,\n    };\n}\n    return (\n      <AuthContext.Provider value={authContext}>\n        {props.children}\n      </AuthContext.Provider>\n    );\n\n};\n\nexport default AuthContextProvider;\n"]},"metadata":{},"sourceType":"module"}