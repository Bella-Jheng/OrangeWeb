{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zhengyiting/ReactProjects/orange-web/store/AuthProvider.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nimport AuthContext from \"./auth-context\";\nvar loginTimer;\n\nvar cauculateRemainTime = function cauculateRemainTime(expiration) {\n  var currentTime = new Date().getTime();\n  var expirationTime = new Date(expiration).getTime();\n  var remainingTime = expirationTime - currentTime;\n  return remainingTime;\n};\n\nvar storeToken = function storeToken() {\n  var token = localStorage.getItem(\"token\");\n  var expirationTime = localStorage.getItem(\"expirationTime\");\n  var remainingTime = cauculateRemainTime(expirationTime); //登入時間超過1小時，登出\n\n  if (remainingTime <= 600000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: token,\n    remainingTime: remainingTime\n  };\n};\n\nvar AuthContextProvider = function AuthContextProvider(props) {\n  _s();\n\n  //每render一次，重新計算過期時間\n  //回傳token,remainingTime\n  var tokenData;\n  var initialToken;\n  useEffect(function () {\n    tokenData = storeToken();\n\n    if (tokenData) {\n      initialToken = localStorage.getItem(\"token\");\n    }\n  }, []);\n\n  var _useState = useState(initialToken),\n      token = _useState[0],\n      setToken = _useState[1];\n\n  var isLogin = !!token; //isString && empty    -> false\n  //isString && notEmpty -> true\n\n  console.log(isLogin);\n  console.log(token);\n  var logout = useCallback(function () {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (loginTimer) {\n      clearTimeout(loginTimer);\n    }\n  }, []);\n\n  var login = function login(token, expirationTime) {\n    //expirationTime 過期時間 = firebase 過期時間\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime); //倒數計時，時間到執行登出\n\n    loginTimer = setTimeout(logout, cauculateRemainTime(expirationTime));\n  }; //重新render時重刷剩餘時間\n\n\n  useEffect(function () {\n    if (tokenData) {\n      loginTimer = setTimeout(logout, tokenData.remainingTime);\n    }\n  }, [tokenData, logout]);\n  var authContext = {\n    token: token,\n    isLogin: isLogin,\n    login: login,\n    logout: logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AuthContextProvider, \"5DygIdo9AoBUkqbhjU5kendKEnw=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/zhengyiting/ReactProjects/orange-web/store/AuthProvider.js"],"names":["useState","useCallback","useEffect","AuthContext","loginTimer","cauculateRemainTime","expiration","currentTime","Date","getTime","expirationTime","remainingTime","storeToken","token","localStorage","getItem","removeItem","AuthContextProvider","props","tokenData","initialToken","setToken","isLogin","console","log","logout","clearTimeout","login","setItem","setTimeout","authContext","children"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport AuthContext from \"./auth-context\";\n\nlet loginTimer;\nconst cauculateRemainTime = (expiration) => {\n  const currentTime = new Date().getTime();\n  const expirationTime = new Date(expiration).getTime();\n  const remainingTime = expirationTime - currentTime;\n\n  return remainingTime;\n};\n\nconst storeToken = () => {\n  const token = localStorage.getItem(\"token\");\n  const expirationTime = localStorage.getItem(\"expirationTime\");\n\n  let remainingTime = cauculateRemainTime(expirationTime);\n\n  //登入時間超過1小時，登出\n  if (remainingTime <= 600000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token,\n    remainingTime,\n  };\n};\n\nconst AuthContextProvider = (props) => {\n  //每render一次，重新計算過期時間\n  //回傳token,remainingTime\n  let tokenData;\n  let initialToken;\n  useEffect(() => {\n    tokenData = storeToken();\n    if (tokenData) {\n        initialToken = localStorage.getItem(\"token\");\n      }\n}, []);\n  \n  const [token, setToken] = useState(initialToken);\n  const isLogin = !!token;\n  //isString && empty    -> false\n  //isString && notEmpty -> true\n\n  console.log(isLogin)\n  console.log(token)\n\n  const logout = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (loginTimer) {\n      clearTimeout(loginTimer);\n    }\n  }, []);\n\n  const login = (token, expirationTime) => {\n    //expirationTime 過期時間 = firebase 過期時間\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n\n    //倒數計時，時間到執行登出\n    loginTimer = setTimeout(logout, cauculateRemainTime(expirationTime));\n  };\n\n  //重新render時重刷剩餘時間\n  useEffect(() => {\n    if (tokenData) {\n      loginTimer = setTimeout(logout, tokenData.remainingTime);\n    }\n  }, [tokenData, logout]);\n\n  const authContext = {\n    token,\n    isLogin,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n"]},"metadata":{},"sourceType":"module"}