{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zhengyiting/ReactProjects/orange-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zhengyiting/ReactProjects/orange-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\n\nvar useHttp = function useHttp() {\n  _s();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var sentRequest = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(requestData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              setError(null);\n              _context.prev = 2;\n              response = fetch(requestData.url, {\n                method: requestConfig.method ? \"POST\" : \"GET\",\n                headers: requestConfig.headers ? requestConfig.headers : {},\n                body: JSON.stringify(requestConfig.body) ? JSON.stringify(requestConfig.body) : null\n              });\n\n              if (response.ok) {\n                _context.next = 6;\n                break;\n              }\n\n              throw new Error(\"Request failed!\");\n\n            case 6:\n              _context.next = 8;\n              return response.json();\n\n            case 8:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              setError(_context.t0.message || \"Something went wrong!\");\n\n            case 15:\n              setIsLoading(false);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    sentRequest: sentRequest\n  };\n};\n\n_s(useHttp, \"H0KODm+bWMq6FJtsIveNtokA4RA=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/zhengyiting/ReactProjects/orange-web/hooks/use-http.js"],"names":["useCallback","useState","useHttp","isLoading","setIsLoading","error","setError","sentRequest","requestData","response","fetch","url","method","requestConfig","headers","body","JSON","stringify","ok","Error","json","data","message"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACcD,QAAQ,CAAC,KAAD,CADtB;AAAA,MACbE,SADa;AAAA,MACFC,YADE;;AAAA,mBAEMH,QAAQ,CAAC,IAAD,CAFd;AAAA,MAEbI,KAFa;AAAA,MAENC,QAFM;;AAIpB,MAAMC,WAAW,GAAGP,WAAW;AAAA,wEAAC,iBAAOQ,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9BJ,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAF8B;AAKtBG,cAAAA,QALsB,GAKXC,KAAK,CAACF,WAAW,CAACG,GAAb,EAAkB;AACtCC,gBAAAA,MAAM,EAAEC,aAAa,CAACD,MAAd,GAAuB,MAAvB,GAAgC,KADF;AAEtCE,gBAAAA,OAAO,EAAED,aAAa,CAACC,OAAd,GAAwBD,aAAa,CAACC,OAAtC,GAAgD,EAFnB;AAGtCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,aAAa,CAACE,IAA7B,IACFC,IAAI,CAACC,SAAL,CAAeJ,aAAa,CAACE,IAA7B,CADE,GAEF;AALkC,eAAlB,CALM;;AAAA,kBAavBN,QAAQ,CAACS,EAbc;AAAA;AAAA;AAAA;;AAAA,oBAcpB,IAAIC,KAAJ,CAAU,iBAAV,CAdoB;;AAAA;AAAA;AAAA,qBAgBTV,QAAQ,CAACW,IAAT,EAhBS;;AAAA;AAgBtBC,cAAAA,IAhBsB;AAAA,+CAkBrBA,IAlBqB;;AAAA;AAAA;AAAA;AAqB5Bf,cAAAA,QAAQ,CAAC,YAAMgB,OAAN,IAAiB,uBAAlB,CAAR;;AArB4B;AAuB9BlB,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AAvB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAwB5B,EAxB4B,CAA/B;AA0BA,SAAM;AACFD,IAAAA,SAAS,EAATA,SADE;AAEFE,IAAAA,KAAK,EAALA,KAFE;AAGFE,IAAAA,WAAW,EAAXA;AAHE,GAAN;AAKD,CAnCD;;GAAML,O;;AAqCN,eAAeA,OAAf","sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sentRequest = useCallback(async (requestData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = fetch(requestData.url, {\n        method: requestConfig.method ? \"POST\" : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: JSON.stringify(requestConfig.body)\n          ? JSON.stringify(requestConfig.body)\n          : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      \n      return data\n\n    } catch (error) {\n      setError(error.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n\n  return{\n      isLoading,\n      error,\n      sentRequest\n  }\n};\n\nexport default useHttp;\n"]},"metadata":{},"sourceType":"module"}