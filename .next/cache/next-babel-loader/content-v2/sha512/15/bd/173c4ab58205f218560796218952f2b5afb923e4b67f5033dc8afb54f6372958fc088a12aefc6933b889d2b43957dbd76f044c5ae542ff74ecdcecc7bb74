{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    isChange: false\n  },\n  reducers: {\n    //read\n    replaceCart: function replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    //edit+add\n    addToCart: function addToCart(state, action) {\n      var newItem = action.payload;\n      var existingItem = state.items.find(function (item) {\n        return item.id == newItem.id;\n      });\n      state.isChange = true;\n      console.log(existingItem);\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          img: newItem.img,\n          price: newItem.price,\n          size: newItem.size,\n          quantity: newItem.quantity,\n          totalPrice: newItem.price * newItem.quality\n        });\n        state.totalQuantity = newItem.quantity;\n      } else {\n        existingItem.quantity = existingItem.quantity + newItem.quantity;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price * newItem.quantity;\n        existingItem.totalQuantity = existingItem.totalQuantity + newItem.quantity;\n      }\n\n      console.log(state.totalQuantity);\n    },\n    //delete\n    removeFromCart: function removeFromCart(state, action) {\n      var newItemId = action.payload;\n      state.isChange = true;\n      var existingItem = state.items.find(function (item) {\n        return item.id === newItemId;\n      });\n\n      if (existingItem) {\n        state.items = state.items.filter(function (item) {\n          return item.id !== newItemId;\n        });\n      } else {\n        state.items = [];\n      }\n    }\n  }\n});\nexport var cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/zhengyiting/ReactProjects/orange-web/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","isChange","reducers","replaceCart","state","action","payload","addToCart","newItem","existingItem","find","item","id","console","log","push","img","price","size","quantity","totalPrice","quality","removeFromCart","newItemId","filter","cartActions","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], totalQuantity: 0, isChange: false },\n  reducers: {\n    //read\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    //edit+add\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id == newItem.id);\n      state.isChange = true;\n\n      console.log(existingItem);\n      \n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          img: newItem.img,\n          price: newItem.price,\n          size: newItem.size,\n          quantity: newItem.quantity,\n          totalPrice: newItem.price * newItem.quality,\n        });\n        state.totalQuantity = newItem.quantity;\n      } else {\n        existingItem.quantity = existingItem.quantity + newItem.quantity;\n        existingItem.totalPrice =\n          existingItem.totalPrice + newItem.price * newItem.quantity;\n        existingItem.totalQuantity =\n          existingItem.totalQuantity + newItem.quantity;\n      }\n      console.log(state.totalQuantity);\n    },\n\n    //delete\n    removeFromCart(state, action) {\n      const newItemId = action.payload;\n      state.isChange = true;\n      const existingItem = state.items.find((item) => item.id === newItemId);\n      if (existingItem) {\n        state.items = state.items.filter((item) => item.id !== newItemId);\n      } else {\n        state.items = [];\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}