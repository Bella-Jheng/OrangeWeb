{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zhengyiting/ReactProjects/orange-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zhengyiting/ReactProjects/orange-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { cartActions } from \"./cart-slice\";\nimport useHttp from \"../hooks/use-http\";\nvar url = \"https://react-http-3d73c-default-rtdb.firebaseio.com/orangecart.json\"; //read\n\nexport var fetchingCartData = function fetchingCartData() {\n  //會自動 export action({type:'addToCart',ammount:1}) 也可以直接export方法出去\n  // const { isLoading, error, sendRequest } = useHttp();\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var fetchData, fetchingData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              fetchData = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var response, data;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return fetch(url);\n\n                        case 2:\n                          response = _context.sent;\n\n                          if (response.ok) {\n                            _context.next = 5;\n                            break;\n                          }\n\n                          throw new Error(\"Fetching data failed!\");\n\n                        case 5:\n                          _context.next = 7;\n                          return response.json();\n\n                        case 7:\n                          data = _context.sent;\n                          return _context.abrupt(\"return\", data);\n\n                        case 9:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function fetchData() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return fetchData();\n\n            case 4:\n              fetchingData = _context2.sent;\n              dispatch(cartActions.replaceCart({\n                items: data.items || [],\n                totalQuantity: data.totalQuantity,\n                totalPrice: data.totalPrice\n              })); //當物件全刪，firebase totalQuantity=0 items 會消失，重刷執行replaceCart會map不到items，因此給預設值空[]\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0.message);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; //update\n\nexport var sendingCartData = function sendingCartData(cartData) {\n  // const { isLoading, error, sendRequest } = useHttp();\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var sendingCart;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              sendingCart = /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var response;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return fetch(url, {\n                            method: \"PUT\",\n                            //put=override, post=add\n                            body: JSON.stringify({\n                              items: cartData.items,\n                              totalQuantity: cartData.totalQuantity,\n                              totalPrice: cartData.totalPrice\n                            }) //avoid the property 'isChanged'\n\n                          });\n\n                        case 2:\n                          response = _context3.sent;\n\n                          if (!response.ok) {\n                            console.log(\"Request failed\");\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function sendingCart() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              _context4.prev = 1;\n              _context4.next = 4;\n              return sendingCart();\n\n            case 4:\n              _context4.next = 9;\n              break;\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.log(\"Request failed\");\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 6]]);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}