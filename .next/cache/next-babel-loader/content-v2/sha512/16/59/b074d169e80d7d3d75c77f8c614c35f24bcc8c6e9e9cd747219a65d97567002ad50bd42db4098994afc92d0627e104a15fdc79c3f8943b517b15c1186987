{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalPrice: 0,\n    isChange: false\n  },\n  reducers: {\n    //read\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    //edit+add\n    addToCart(state, action) {\n      const newItem = action.payload;\n      let existingItem = state.items.find(item => item.id == newItem.id);\n      state.isChange = true;\n      state.totalQuantity = state.totalQuantity + newItem.quantity;\n      state.totalPrice = state.totalPrice + newItem.quantity * newItem.price;\n\n      if (existingItem && existingItem.size) {\n        existingItem = state.items.find(item => item.size == newItem.size);\n      }\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          img: newItem.img,\n          price: newItem.price,\n          size: newItem.size,\n          quantity: newItem.quantity,\n          totalPrice: newItem.price * newItem.quantity\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + newItem.quantity;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price * newItem.quantity;\n      }\n    },\n\n    //delete\n    removeFromCart(state, action) {\n      const newItem = action.payload;\n      state.isChange = true;\n      let existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (existingItem && existingItem.size) {\n        existingItem = state.items.find(item => item.size == newItem.size);\n      }\n\n      if (existingItem) {\n        if (!newItem.size) {\n          state.items = state.items.filter(item => item.id !== newItem.id);\n        } else {\n          state.items = state.items.filter(item => item.size !== newItem.size);\n        }\n\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n        state.totalPrice = state.totalPrice - existingItem.quantity * existingItem.price;\n      } else {\n        state.items = [];\n        state.totalQuantity = 0;\n        state.totalPrice = 0;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":null,"metadata":{},"sourceType":"module"}